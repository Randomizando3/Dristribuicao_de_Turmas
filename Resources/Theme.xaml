<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- ======= PALETA ======= -->
    <Color x:Key="PrimaryColor">#2F5DFF</Color>
    <Color x:Key="PrimaryDarkColor">#254BCC</Color>
    <Color x:Key="SurfaceColor">#FFFFFFFF</Color>
    <Color x:Key="BgColor">#F4F6FA</Color>
    <Color x:Key="TextPrimary">#1F2937</Color>
    <Color x:Key="TextSecondary">#6B7280</Color>
    <Color x:Key="BorderColor">#E5E7EB</Color>
    <Color x:Key="AccentColor">#10B981</Color>
    <Color x:Key="DangerColor">#EF4444</Color>

    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
    <SolidColorBrush x:Key="PrimaryDarkBrush" Color="{StaticResource PrimaryDarkColor}"/>
    <SolidColorBrush x:Key="SurfaceBrush" Color="{StaticResource SurfaceColor}"/>
    <SolidColorBrush x:Key="BgBrush" Color="{StaticResource BgColor}"/>
    <SolidColorBrush x:Key="TextPrimaryBrush" Color="{StaticResource TextPrimary}"/>
    <SolidColorBrush x:Key="TextSecondaryBrush" Color="{StaticResource TextSecondary}"/>
    <SolidColorBrush x:Key="BorderBrushSoft" Color="{StaticResource BorderColor}"/>
    <SolidColorBrush x:Key="AccentBrush" Color="{StaticResource AccentColor}"/>
    <SolidColorBrush x:Key="DangerBrush" Color="{StaticResource DangerColor}"/>

    <!-- Divider mais forte para header de DataGrid -->
    <SolidColorBrush x:Key="HeaderDividerBrush" Color="#D1D5DB"/>

    <!-- ======= BASE ======= -->
    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
    </Style>

    <Style x:Key="H1" TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="FontSize" Value="22"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,0,0,12"/>
    </Style>

    <!-- ======= BUTTON (geral) ======= -->
    <Style TargetType="Button">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="Margin" Value="8,0,0,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="BtnBg" CornerRadius="10" Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Margin="8,2"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}" TargetName="BtnBg"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5" TargetName="BtnBg"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Botão claro (uso geral na UI) -->
    <Style x:Key="GhostButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Background" Value="#E9EEFF"/>
    </Style>

    <!-- Azul e Danger SEMPRE com texto branco -->
    <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="DangerButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{StaticResource DangerBrush}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- ======= NAV BUTTON DA SIDEBAR ======= -->
    <!-- Use com ToggleButton: Style=NavToggleButton, Tag=glifo (Segoe MDL2), Content=rótulo -->
    <Style x:Key="NavToggleButton" TargetType="ToggleButton">
        <Setter Property="Height" Value="52"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="#EAF0FF"/>
        <Setter Property="Background" Value="#2D3B6B"/>
        <Setter Property="Margin" Value="0,6,0,0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <!-- Indicador de seleção -->
                        <Rectangle x:Name="SelBar" Width="4" HorizontalAlignment="Left"
                                   Fill="{StaticResource PrimaryBrush}" RadiusX="2" RadiusY="2"
                                   Visibility="Collapsed"/>

                        <!-- Fundo do botão -->
                        <Border x:Name="Bg" CornerRadius="8" Background="{TemplateBinding Background}">
                            <Grid Margin="16,0,12,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <!-- Ícone -->
                                <TextBlock Grid.Column="0"
                                           FontFamily="Segoe MDL2 Assets"
                                           Text="{TemplateBinding Tag}"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           FontSize="18"
                                           Foreground="#EAF0FF"/>

                                <!-- Texto -->
                                <TextBlock Grid.Column="1"
                                           Text="{TemplateBinding Content}"
                                           HorizontalAlignment="Left"
                                           VerticalAlignment="Center"
                                           Foreground="#EAF0FF"/>
                            </Grid>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- hover -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="#36467C"/>
                        </Trigger>

                        <!-- pressed -->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="#3E4F8D"/>
                        </Trigger>

                        <!-- selecionado -->
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="#40529B"/>
                            <Setter TargetName="Bg" Property="CornerRadius" Value="10"/> <!-- canto como botão normal -->
                            <Setter TargetName="SelBar" Property="Visibility" Value="Visible"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>

                        <!-- desabilitado -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ======= CARD ======= -->
    <Style x:Key="Card" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
        <Setter Property="CornerRadius" Value="14"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSoft}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Margin" Value="16"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="12" ShadowDepth="1" Opacity="0.12"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ======= TEXTBOX / COMBO ======= -->
    <Style TargetType="TextBox">
        <Setter Property="Background" Value="#FFF"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSoft}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="#FFF"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSoft}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="Margin" Value="4"/>
    </Style>

    <!-- ======= DATAGRID ======= -->
    <Style TargetType="DataGrid">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="RowHeight" Value="36"/>
        <Setter Property="HeadersVisibility" Value="All"/>
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource BorderBrushSoft}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{StaticResource BorderBrushSoft}"/>
        <Setter Property="AlternatingRowBackground" Value="#FAFAFA"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <!-- Cabeçalho com divisor inferior visível e centralizado -->
    <Style TargetType="DataGridColumnHeader">
        <Setter Property="Foreground" Value="{StaticResource TextSecondaryBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Background" Value="#F8FAFC"/>
        <Setter Property="Padding" Value="10,8"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                            <!-- Linha divisória inferior -->
                            <Rectangle Height="1" Fill="{StaticResource HeaderDividerBrush}"
                                       VerticalAlignment="Bottom" HorizontalAlignment="Stretch"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Linhas -->
    <Style TargetType="DataGridRow">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushSoft}"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#F3F6FF"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#E9EEFF"/>
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Células centralizadas -->
    <Style TargetType="DataGridCell">
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>
